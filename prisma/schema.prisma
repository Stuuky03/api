generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.svg"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Student {
  id            String                @id
  firstName     String
  username      String                @unique
  email         String                @unique
  password      String
  bio           String?
  badges        StudentBadges[]
  badges_count  Int                   @default(0)
  points        StudentPoints[]
  stuukes       Stuuke[]
  stuukes_count Int                   @default(0)
  questions     Question[]
  notifications StudentNotification[]

  @@map("student")
}

model StudentPoints {
  id        String  @id
  points    Int     @default(0)
  semester  Int
  year      Int
  Student   Student @relation(fields: [studentId], references: [id])
  studentId String

  @@index([semester, year, studentId], name: "points_semester_year_idx")
  @@map("studentPoints")
}

model StudentBadges {
  id        String   @id @default(uuid())
  earnedAt  DateTime
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  badge     Badge[]

  @@map("studentBadges")
}

model Badge {
  id              String        @id @default(uuid())
  name            String
  description     String
  imageUrl        String
  studentBadges   StudentBadges @relation(fields: [studentBagdesId], references: [id])
  studentBagdesId String
}

model StudentNotification {
  id        String  @id @default(uuid())
  title     String
  message   String
  student   Student @relation(fields: [studentId], references: [id])
  studentId String
}

model Question {
  id        String   @id
  title     String
  content   String
  createdAt DateTime
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  stuukes   Stuuke[]

  @@map("question")
}

model Stuuke {
  id         String             @id
  title      String
  content    String
  createdAt  DateTime
  references StuukeReferences[]
  student    Student            @relation(fields: [studentId], references: [id])
  studentId  String
  Question   Question           @relation(fields: [questionId], references: [id])
  questionId String

  @@map("stuuke")
}

model StuukeReferences {
  id       String @id
  title    String
  url      String
  stuuke   Stuuke @relation(fields: [stuukeId], references: [id])
  stuukeId String

  @@map("stuukeReferences")
}
